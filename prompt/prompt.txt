I need an INO for an esp8266 (d1 mini).
	All stages should be output to serial for debugging
		Data may be output to serial, EXCEPT PASSWORDS

It should boot up, and the first time booting:
	Initialize LittleFS if necessary (can this be tested or is it blind?)
	Offer an AP to configure WiFI (wifi manager may be used if it suffices):
		SSID
		SSID pw
		Static IP address
		GW
		Netmask

Once WiFI is configured, it should no longer offer the AP again for security.

Once booted and it detects an SSID has been stored, it will be in its normal usage mode.

In normal mode it will:
	Set auto-reconnect on.
	Connect to the SSID (non-blocking).
	Set up a web server
		Separate pages are their own function calls for display (and for config)
	Initialize stored data if values are not set.
		* Little FS is fine if it doesn't conflict with the wifi settings
		Config (admin) password: Default is blank (not protected)
			admin_pw
		Time servers (http-based): Up to 5 IP addresses (NOT HOSTNAMES)
			time_server(s) (how to store multiple IPs?)

Web server:
	* Config storage hits say "Updated..." or whatever, and redirect to the main page after 3 seconds
	* Web 'pages' are in separate functions, not all in server.on() area
	* You may use separate calls to display strings instead of generating long strings:
		server.sendContent(F("some html\n"));
		server.sendContent(F("something else\n"));

	/
		displays "Sprinkler Main"
		uptime: yyyy-mm-dd hh:mm:ss
		Individual sprinkler controls:
			* These immediately turn on the respective zone
				They hit /on?{info for zone and timing}
				/off?{info for zone}
			Items on page
				# Zone name
					[Zone seconds on convenience preset0 button]
						Example buttons (filled in with stored values):
							{30s} {60s} {480s} .. {last non-empty preset}
					[number field: seconds] {On} (submits to turn on this zone for manually-entered seconds. Default 0 (will not turn on even if submitted))
					{Off} (forces off this zone)
				...
				# Zone name N (last configured zone with a pin set)
		Additional links at bottom:
			[Reboot link] -> /reboot
			[Flash OTA] -> /ota (or wherever the OTA web ui goes .. the one accepting the .bin)
			
	/config?pw={internal pw required. initial pw was blank (not required)}
		Separate forms:
			Net Settings:
				[SSID] (filled in)
				[SSID PW] (shows '***' and submission tests for this, to prevent accidental setting of '***' as a password.)
				[IP] (filled in)
				[GW] (filled in)
				[Mask] (filled in)
				{Submit (this is a button)} -> /config_net?
				* Entire update fails if password is '***' or any values are not provided.
				[Time server IP 0]
				...
				[Time server IP 5]
			Zones:
				* Each sprinkler zone has preset seconds for convenience buttons
				[Sprinkler Control Name] {Set (this is a button)}
				[pin0 #] [Zone 0 name] {Set}
					[pin0 seconds0]
					[pin0 seconds1]
					[pin0 seconds2]
					[pin0 seconds3]
					[pin0 seconds4]
					{Set}
				[pin1 #] [Zone 1 name] {Set}
					[pin0 seconds0]
					[pin0 seconds1]
					[pin0 seconds2]
					[pin0 seconds3]
					[pin0 seconds4]
					{Set}
				..
				[pin{MAX_ZONES-1} #] [Zone 10 name] {Set}
			Set admin pw: [Admin password] {Store}
		/store?
			Used for storage of any passed settings

In loop():
	Timers:
		Static timer vars initialized to 0 so they are run immediately upon the first loop()
		Check every NET_TEST_S (seconds) for network connection and attempt a reconnect, in case auto-reconnect is not working right.
		Check every TIME_RETR_S (seconds) for updated time. (The initial test is done immediately, so set our timer (last_time_retr_ms) to 0?
		Check every 1s for zone timers to run out:
			Check if any zones are on, and if their time has elapsed, turn off.

httptime.cpp / .h:
	Uses local systems', which often have web servers on port 80, to get time
	You may use these directly, or you may modify them only if needed.

settings.h:
	#define NET_TEST_S (60*2)   // secs between network/wifi tests for reconnect
	#define TIME_RETR_S (60*5)  // secs between time update retrievals
	#define MAX_ZONES 8         // Count of zones we allow and offer

